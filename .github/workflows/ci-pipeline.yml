name: CI-pipeline

on:
  pull_request:
    branches: [main]

jobs:
  backend_tests:
    runs-on: ubuntu-24.04

    services:
      postgres:
          image: postgres
          env:
            POSTGRES_PASSWORD: mysecretpassword
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.6
      - name: install dependencies
        run: |
          cd backend
          npm ci
      - name: run eslint
        run: |
          cd backend
          npm run lint
      - name: run backend tests
        run: |
          cd backend
          npm run test
        env:
          TEST_DATABASE_URL: postgres://postgres:mysecretpassword@localhost:5432/postgres
          PORT: 4000
          SECRET: secret
          ADMIN_USERNAME: admin
          ADMIN_PASSWORD: AdminTestPassword1

  frontend_tests:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.6
      - name: install dependencies
        run: |
          cd frontend
          npm ci
      - name: run eslint
        run: |
          cd frontend
          npm run lint
      - name: run frontend tests
        run: |
          cd frontend
          npm run test
  
  e2e_tests:
    runs-on: ubuntu-24.04

    services:
      postgres:
          image: postgres
          env:
            POSTGRES_PASSWORD: mysecretpassword
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.6

      - name: install e2e dependencies
        run: |
          cd e2e
          npm ci
        
      - name: run eslint
        run: |
          cd e2e
          npm run lint
      
      - name: install backend dependencies
        run: |
          cd backend
          npm ci
       
      - name: install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: start test backend
        run: |
          cd backend
          npm run start:test &
        env:
          TEST_DATABASE_URL: postgres://postgres:mysecretpassword@localhost:5432/postgres
          PORT: 4000
          SECRET: secret
          ADMIN_USERNAME: admin
          ADMIN_PASSWORD: AdminTestPassword1
      
      - name: start test frontend
        run: |
          cd frontend
          npm run dev &
    
      - name: install playwright dependencies
        run: |
          cd e2e
          npx playwright install --with-deps
      
      - name: run e2e tests
        run: |
          cd e2e
          npm run test